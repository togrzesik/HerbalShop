@model Sklep.Models.ViewModel.ProductView
@{
    ViewBag.Title = "Szczegóły produktu";
    Layout = "~/Views/Shared/LayoutNotLogged.cshtml";
}

<title>@Model.Name</title>

<div class="container containerStore  container--detailsProduct">
    <div class="row">
        <p class="col-md-6 detailsProduct_name">
            @Html.DisplayFor(model => model.Name)
        </p>

    </div>
    <div class="row">
        <div class="col-md-6 containter--carousel">
            <div id="myCarousel" class="carousel slide detailsProduct_carousel" data-ride="carousel" data-interval="false">
                <ol class="carousel-indicators detailsProduct_carousel_indicators">
                    @{
                        int counter = 0;
                        foreach (var item in Model.ImagesPath)
                        {
                            if (counter == 0)
                            {
                                <li class="detailsProduct_carousel_indicators_li" data-target="#myCarousel" data-slide-to="@counter" class="active">
                                    <img class="d-block w-100" src="@Url.Content(item)" alt="Zdjęcie produktu">
                                </li>
                            }
                            else
                            {
                                <li  data-target="#myCarousel" data-slide-to="@counter">
                                    <img class="d-block w-100" src="@Url.Content(item)" alt="Zdjęcie produktu">
                                </li>
                            }

                            counter++;
                        }
                    }
                </ol>
                <div class="carousel-inner">
                    @{
                        int counterr = 0;
                        foreach (var item in Model.ImagesPath)
                        {
                            if (counterr == 0)
                            {
                                <div class="carousel-item active">
                                    <img class="d-block detailsProduct_container_image " src="@Url.Content(item)" alt="zdjęcie produktu">
                                </div>
                            }
                            else
                            {
                                <div class="carousel-item">
                                    <img class="d-block detailsProduct_container_image " data-target="#myCarousel" src="@Url.Content(item)" alt="zdjęcie produktu">
                                </div>
                            }
                            counterr++;
                        }
                    }

                </div>
                <a class="carousel-control-prev carousel-control--detailsProduct carousel-control_prev--detailsProduct" href="#myCarousel" role="button" data-slide="prev">
                    <i class="material-icons detailsProduct_container_icon">keyboard_arrow_left</i>
                </a>
                <a class="carousel-control-next carousel-control--detailsProduct" href="#myCarousel" role="button" data-slide="next">
                    <i class="material-icons detailsProduct_container_icon">keyboard_arrow_right</i>
                </a>
            </div>
        </div>
        <div class="col-md-5 mx-auto detailsProduct_container">
            <div class="col detailsProduct_form">
              @{
                  if (Model.OldPriceB != null)
                  {
                    <div class="row">
                        <p class="detailsProduct_form_text--lastPrice mx-auto col-5 col-lg-4">
                            <strike>Poprzednia cena (brutto):</strike>
                        </p>
                        <p class="detailsProduct_form_text--lastPrice mx-auto col-5 col-lg-4">
                            <strike>@Html.DisplayFor(model => model.OldPriceB)</strike>
                        </p>
                    </div>
                    <div class="row">
                        <p class="detailsProduct_form_text--nettoPrice mx-auto col-5 col-lg-4">Cena (netto):</p>
                        <p class="detailsProduct_form_text--nettoPrice mx-auto col-5 col-lg-4">@Html.DisplayFor(model => model.PriceN)</p>
                    </div>
                    <div class="row">
                        <p class="detailsProduct_form_text--bruttoPrice mx-auto col-5 col-lg-4">Cena (brutto):</p>
                        <p class="detailsProduct_form_text--bruttoPrice mx-auto col-5 col-lg-4">@Html.DisplayFor(model => model.PriceB)</p>
                    </div>
                  }
                  else
                  {
                    <div class="row">
                        <p class="detailsProduct_form_text--nettoPrice mx-auto col-5 col-lg-4">Cena (netto):</p>
                        <p class="detailsProduct_form_text--nettoPrice mx-auto col-5 col-lg-4">@Html.DisplayFor(model => model.PriceN)</p>
                    </div>
                    <div class="row">
                        <p class="detailsProduct_form_text--bruttoPrice mx-auto col-5 col-lg-4">Cena (brutto):</p>
                        <p class="detailsProduct_form_text--bruttoPrice mx-auto col-5 col-lg-4">@Html.DisplayFor(model => model.PriceB)</p>
                    </div>
                  }
            }
             
                @using (Html.BeginForm("DodajDoKoszykaIlosc", "Koszyk", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.ProductID)
                    @Html.HiddenFor(model => model.Quantity)
                    <div class="row">
                        @Html.EditorFor(model => model.QuantityChoose, new { htmlAttributes = new { @class = "form-control detailsProduct_form_input mx-auto col-4", @id = "ilosc", max = ViewBag.Quantity, min = 0, @name = "ilosc", @type = "number"} })
                    </div>
                    <div class="row">
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  mx-auto products_productRecommended_button" type="submit">
                            Dodaj do koszyka
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="row">
        <ul class="nav nav-pills mb-3 mx-auto detailsProduct_nav" id="pills-tab" role="tablist">
            <li class="nav-item  detailsProduct_nav_li">
                <a class="nav-link" id="pills-home-tab" data-toggle="pill" href="#pills-home" role="tab" aria-controls="pills-home"
                   aria-selected="false">Opis</a>
            </li>
            <li class="nav-item  detailsProduct_nav_li">
                <a class="nav-link active" id="pills-profile-tab" data-toggle="pill" href="#pills-profile" role="tab" aria-controls="pills-profile"
                   aria-selected="true">Specyfikacja</a>
            </li>
            <li class="nav-item  detailsProduct_nav_li">
                <a class="nav-link" id="pills-contact-tab" data-toggle="pill" href="#pills-contact" role="tab" aria-controls="pills-contact"
                   aria-selected="false">Komenatrze</a>
            </li>
        </ul>
        <div class="tab-content col-12 detailsProduct_nav_content" id="pills-tabContent">
            <div class="tab-pane fade  detailsProduct_nav_content_tabPane" id="pills-home" role="tabpanel" aria-labelledby="pills-home-tab">
                <p>
                   @Html.DisplayFor(model => model.Description)
                </p>
            </div>
            <div class="tab-pane fade show active detailsProduct_nav_content_tabPane" id="pills-profile" role="tabpanel" aria-labelledby="pills-profile-tab">
                <div class="col-sm-10 mx-auto">
                    <table id="example" class=" mdl-data-table mdl-js-data-table table-responsive" width="100%">


                        <tbody>
                           @{
                               foreach (var item in Model.specJ)
                               {
                                <tr>
                                    <td class="mdl-data-table__cell--non-numeric col-md-5 text-wrap">@item.Key</td>
                                    <td class="mdl-data-table__cell--non-numeric width-50">@item.Value</td>
                                </tr>
                               }
                        }


                        </tbody>
                    </table>
                </div>
            </div>
            <div class="tab-pane fade  detailsProduct_nav_content_tabPane" id="pills-contact" role="tabpanel" aria-labelledby="pills-contact-tab">
                <div class="row">
                @Html.Action("WyswietlKomentarz", "Komentarz", new { productID = Model.ProductID })
               
                   
                        <div class="col-sm-10 mx-auto detailsProduct_comment_form">
                            <p class="detailsProduct_comment_form_title">Napisz komentarz</p>
                            
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "AddComment" }))
{

    @Html.AntiForgeryToken()
    <div class="row">
        <p class="col-lg-4 detailsProduct_comment_form_labelInput">Treść komentarza:</p>
        <div class="mdl-textfield mdl-js-textfield  col-12  col-md-8">
            <textarea class="mdl-textfield__input detailsProduct_comment_form_input " type="text" rows="6" id="commentContent" placeholder="Napisz komentarz"></textarea>
            <label class="mdl-textfield__label detailsProduct_comment_form_input" for="commentContent"></label>
        </div>
    </div>
}
   

                            <div class="row">
                                <input type="button" id="sendComment" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect detailsProduct_comment_form_button col-12 col-md-5" value="Dodaj komentarz" />
                            </div>
                        </div>
                      
                        
                    </div>
            </div>
        </div>
    </div>
</div>


<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="titleModal"></h4>
            </div>
            <div class="modal-body">
                <p id="contentModal"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect modal_button--myModal" data-dismiss="modal">Zamknij</button>
            </div>
        </div>

    </div>
</div>



<script>

    $(function () {
        $("#sendComment").click(function () {
            var form = $('#AddComment');
            var token = $('input[name="__RequestVerificationToken"]', form).val();
            var comment = document.getElementById("commentContent").value;
            var product = "@Model.ProductID";
            if (comment.length < 3) {
                document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                document.getElementById("contentModal").innerHTML = "Komentarz musi liczyć minimum 3 znaki.";
                $("#myModal").modal({
                });
                return;
            }
            if (comment.length > 500)
            {
                document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                document.getElementById("contentModal").innerHTML = "Komentarz nie może liczyć więcej niż 500 znaków.";
                $("#myModal").modal({
                });
                return;
            }
            $.post("/Komentarz/DodajKomentarz",
                {
                    __RequestVerificationToken: token, 
                    Comment: comment,
                    Product: product
                },
                function (data, status) {
                    if (data == "SIGNIN")
                    {
                        document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                        document.getElementById("contentModal").innerHTML = "Aby dodać komentarz, należy się zalogować.";
                        $("#myModal").modal({
                        });
                    }
                    else if (data == "OK") {
                        document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                        document.getElementById("contentModal").innerHTML = "Komentarz został wysłany.";
                        $("#myModal").modal({
                        });
                    }
                    else if(data == "NO") {
                        document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                        document.getElementById("contentModal").innerHTML = "Nie można dodać drugiego komenatrza do tego produktu.";
                        $("#myModal").modal({
                        });
                    }
                    else {
                        document.getElementById("titleModal").innerHTML = "Dodawanie komentarza";
                        document.getElementById("contentModal").innerHTML = "Błąd dodawania komentarza. Spróbuj jeszcze raz.";
                        $("#myModal").modal({
                        });
                    }
                });
        });

    });
</script>